// generic transform
@mixin transform($transforms) {
  @include prefixer(transform, $transforms);
}

// rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// translate
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

// skew
@mixin skew($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin($to) {
  @include prefixer(transform-origin, $to);
}

$transform-style-modes: concat((flat, preserve-3d), $css-default-modes);

@function is-transform-style-mode($ts) {
  @return contains($transform-style-modes, $ts);
}

@mixin transform-style($ts) {
  @if is-defined($ts) and is-transform-style-mode($ts) {
    @include prefixer(transform-style, $ts);
  }
  @else {
    @warn '`transform-style: #{$ts}` is not a valid transform-style mode';
  }
}
