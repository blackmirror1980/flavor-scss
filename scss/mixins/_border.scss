$border-styles: concat((none, hidden, dotted, dashed, solid, double, groove, ridge, inset, outset), $css-default-modes);

@function is-border-style($bs) {
  @return contains($border-styles, $bs);
}

@mixin border-radius($br...) {
  @include prefixer(border-radius, $br);
}

$border-modes: concat((none), $css-default-modes);

@function is-border-mode($b) {
  @return contains($border-modes, $b);
}

@mixin border($options, $shorthand: false) {
  @if is-border-mode($options) {
    border: $options;
  }
  @else {
    $settings: (size: 0, style: none, color: inherit, radius: 0);

    @if is-object($options) {
      $settings: extend($settings, $options);
    }
    @else {
      $size: if(length($options) > 0, nth($options, 1), null);

      @if is-defined($size) {
        $settings: map-merge($settings, (size: $size));
      }

      $style: if(length($options) > 1, nth($options, 2), null);

      @if is-defined($style) {
        $settings: map-merge($settings, (style: $style));
      }

      $color: if(length($options) > 2, nth($options, 3), null);

      @if is-defined($color) {
        $settings: map-merge($settings, (color: $color));
      }

      $radius: if(length($options) > 3, nth($options, 4), null);

      @if is-defined($radius) {
        $settings: map-merge($settings, (radius: $radius));
      }
    }

    $border: ();

    $border-width: map-get($settings, size);

    @if is-css-size($border-width) {
      $border: append($border, $border-width);
    }
    @else {
      @warn '`border-width: #{$border-width}` is not a valid size';
    }

    $border-style: map-get($settings, style);

    @if is-border-style($border-style) {
      $border: append($border, $border-style);
    }
    @else {
      @warn '`border-style: #{$border-style}` is not a valid border-style value';
    }

    $border-color: map-get($settings, color);
    @if is-css-color($border-color) {
      $border: append($border, $border-color);
    }
    @else {
      @warn '`border-color: #{$border-color}` is not a valid css color';
    }

    border: $border;

    $border-radius: map-get($settings, radius);

    @if is-css-size($border-radius) {
      @include border-radius($border-radius);
    }
    @else {
      @warn '`border-radius: #{$border-radius}` is not a valid size';
    }
  }
}
