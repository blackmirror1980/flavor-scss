@function is-padding($p) {
  @return is-defined($p) and (array-contains($css-default-modes, $p) or is-size($p) or is-percentage($p));
}

@mixin padding-direction($p, $padding-direction-selector: padding) {
  @if is-defined($p) {
    @if is-padding($p) {
      #{$padding-direction-selector}: $p;
    }
    @else {
      @warn '`#{$padding-direction-selector}: #{$p}` is not a valid padding value';
    }
  }
}

@mixin padding-top($p) {
  @include padding-direction($p, padding-top);
}

@mixin padding-right($p) {
  @include padding-direction($p, padding-right);
}

@mixin padding-bottom($p) {
  @include padding-direction($p, padding-bottom);
}

@mixin padding-left($p) {
  @include padding-direction($p, padding-left);
}

@mixin padding($p) {
  $padding-top: nth-value($p, 1, 0);
  @include padding-top($padding-top);

  $padding-right: nth-value($p, 2, $padding-top);
  @include padding-right($padding-right);

  $padding-bottom: nth-value($p, 3, $padding-top);
  @include padding-bottom($padding-bottom);

  $padding-left: nth-value($p, 4, $padding-right);
  @include padding-left($padding-left);
}
