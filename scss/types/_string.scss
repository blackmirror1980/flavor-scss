@charset 'UTF-8';

@function is-string($s) {
  @return is-defined($s) and type-of($s)==string;
}

@function string-starts-with($h, $n) {
  @if is-string($h) and is-string($n) {
    @return str-slice($h, 1, str-length($n))==$n;
  }

  @warn '`haystack: #{$h}` and `needle: #{$n}` are not valid strings';
  @return false;
}

@function string-contains($h, $n) {
  @if is-string($h) and is-string($n) {
    @return str-index($h, $n) > 0;
  }

  @warn '`haystack: #{$h}` and `needle: #{$n}` are not valid strings';
  @return false;
}

@function string-ends-with($h, $n) {
  @if is-string($h) and is-string($n) {
    $h-length: str-length($h);
    $n-length: str-length($n);

    @return str-slice($h, $h-length - $n-length + 1)==$n;
  }

  @warn '`haystack: #{$h}` and `needle: #{$n}` are not valid strings';
  @return false;
}

@function string-split($s, $sep) {
  $split: ();

  $i: str-index($s, $sep);

  @while $i !=null {
    $item: str-slice($s, 1, $i - 1);
    $split: append($split, $item);
    $s: str-slice($s, $i + 1);
    $i: str-index($s, $sep);
  }

  $split: append($split, $s);

  @return $split;
}
